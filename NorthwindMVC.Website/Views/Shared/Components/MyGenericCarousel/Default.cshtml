@model CarouselViewModel

<div>
    <!--Carousel Wrapper-->
    <div id="my-generic-carousel" class="carousel slide" data-ride="carousel" data-interval="5000" data-keyboard="true">

        <!--Indicators-->
        <ol class="carousel-indicators">
            @for (int c = 0; c < Model.NumberOfSlides; c++)
            {
                <li data-target="#my-generic-carousel" data-slide-to="@c" class="@Model.ShouldBeActive(c)"></li>
            }
        </ol>
        <!--/.Indicators-->
        <!--Slides-->
        <div class="carousel-inner row w-100 mx-auto" role="listbox">

            @for (int i = 0; i < @Model.Count; i += Model.ElementsPerSlide)
            {
            <div class="carousel-item @Model.ShouldBeActive(i)">
                @if (Model.IsSingleCardPerSlide)
                {
                    @await Component.InvokeAsync("BigCard", @Model[i])
                }
                @if (!Model.IsSingleCardPerSlide)
                {
                    @await Component.InvokeAsync("MyGenericCarouselMultiItemSlide", @Model.GetNextChunkToDisplay(i))
                }

            </div>
            }
        </div>
        <a class="carousel-control-prev" href="#my-generic-carousel"
           role="button" data-slide="prev">
            <span class="carousel-control-prev-icon"
                  aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#my-generic-carousel"
           role="button" data-slide="next">
            <span class="carousel-control-next-icon"
                  aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>